# Build Artifacts (Java)
bin/
build/
out/
.gradle/
*.class
*.jar
*.war
*.ear
*.tar.gz
*.log
*.lock
*.bin
*.bak
*.swp
*.swo
*.DS_Store
*.pyc
*.pyo
*.egg-info
.idea/
*.iml
.project
.classpath
.settings/
.vscode/
node_modules/
dist/
target/
*.probe

# Build Artifacts (C/C++)
*.o
*.obj
*.exe
*.dll
*.so
*.dylib
*.a
*.lib
*.pdb
*.ilk
*.idb
*.map
*.out
*.elf
*.dSYM/
* #


# Other Unnecessary Files
*.user
*.suo
*.ncb
*.sln.user
*.opensdf
*.sdf
*.ipch/
*.vs/
*.vssscc
*.vspscc
*.vspolicy
*.userosscache
*.userprefs
*.orig
*.rej
*.DS_Store

# Additional Enhanced Patterns
**/*.class
**/*.exe
**/*.out
**/*.app
**/*.i*86
**/*.x86_64
**/*.hex
**/*.dSYM/
**/*.su
**/Debug/
**/Release/
**/x64/
**/x86/
**/*.sublime-*
**/.eclipse/
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "mapReader.h"
#include "gameHandler.h"
#include"random.h"

char* mapName()
{
    char* filename = (char*)malloc(100 * sizeof(char));

    if(filename == NULL)
    {
        perror("Memory allocation failed");
        return NULL;
    }
    
    do
    {
        printf("\n\nEnter the name of the file to write to: ");
        scanf("%s", filename);
    }
    while(filename == NULL || strlen(filename) == 0);

    filename = strcat(filename, ".txt");

    return filename;
}

int rowDim()
{
    int rows;

    do
    {
        printf("Enter the number of rows: ");
        scanf("%d", &rows);
        
        if(rows < 3)
        {
            printf("Invalid input. Please enter a number above 3\n");
        }
    }
    while(rows <= 3);

    return rows;
}

int colDim()
{
    int cols;

    do
    {
        printf("Enter the number of columns: ");
        scanf("%d", &cols);
        
        if(cols < 3)
        {
            printf("Invalid input. Please enter a number above 3\n");
        }
    }
    while(cols <= 3);

    return cols;
}